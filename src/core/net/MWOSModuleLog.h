#ifndef MWOS3_MWOSMODULELOG_H
#define MWOS3_MWOSMODULELOG_H

/***
 * Модуль журнала
 * сохраняет события в журнал
 *
 *
    Формат журнала:
    В журнал сохраняются только события от параметров.
    Сохраняемое значение параметра не может быть массивом, но может быть строкой.
    Журнал автоматически отправляется на сервер, когда есть связь.
    Но данные в журнале удаляются только по команде от сервера.
    Сервер может повторно запросить данные из журнала.

    Взаимодействие журнала и сервера:
    При наличии связи, модуль net0 начинает передавать данные жернала.
    От начала журнала и сколько записей журнала влезет в пакет связи.
    Журнал при этом выставляет флаг "busy", запрещая модулю net0 дальнейшую передачу данных.
    Сервер в течении таймаута (10 сек) сообщает журналу, что можно удалитьзапипи первые N записей от id1 до id2
    (где N = сколько записей из журнала получил сервер).
    Если сервер удалил полученные записи из журнала, или вышел таймаут (10 сек), то флаг busy снимается.
    После этого модуль снова начинает передавать данные из начала журнала.
    Если сервер получает отметки с одинаковым id и временем, то это считается дубликатом и игнорируется
    id записи - просто чило, которое увеличивается на 1 при каждой записи а журнал.


    Журнал состоит из фреймов. Внутри каждого фрейма может быть произвольное количество записей.
    Новый фрейм генерируется в следующих случаях:
    1. После включения или перезагрузки контроллера
    2. При изменении времени контроллера
    3. При достижении 65534 записей внутри фрейма
    4. При неактивности событий более 65534 сек

    Формат фрейма (10 байт):
    2b - 0xffff - признак начала нового фрейма
    4b - внутреннее время контроллера lunuxtime
    4b - кол-во перезагрузок контроллера

    Формат записи события от 9 байт.
    2b: {id записи} - id предыдущей записи +1
    2b: {сек от последней записи}
    2b: {id модуля}
    2b: {id параметра}
    1b-255b: {зная формат параметра, рассчитывается его длина в байтах}
 */

#include <core/adlib/MWTimeout.h>
#include <core/adlib/LibCRC.h>
#include <core/adlib/MWArduinoLib.h>
#include "core/MWOSModule.h"
#include "core/MWOSParam.h"
#include "MWOSNetTransmitter.h"
#include "MWOSNetReciver.h"


class MWOSModuleLog : public MWOSModule {
public:


    MWOSModuleLog() : MWOSModule((char *) F("log")) {

    }


    virtual void onUpdate() {

    }






private:


};


#endif //MWOS3_MWOSMODULELOG_H
